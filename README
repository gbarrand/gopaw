
  To build :
    UNIX> cd gopaw/mgr
    UNIX> ./build  # X11 version on macOS, Linux, win32 on a Windows-10/CYGWIN.
  ( UNIX> ./build -v)
  ( UNIX> ./build -x  # for a full traceback)
    UNIX> ./build -offscreen -bin_offscreen  # for the offscreen version (user is not prompted).
    
 (here UNIX is for Linux, macOS, Windows-10/CYGWIN)

  If the GNU parallel application is known from your prompt, you can use the "-parallel"
 option so that C and C++ file compilations are distributed on your cores. This feature
 had been tested with success on macOS with a MacPorts installation of the GNU parallel program
 and on centos7 by using the GNU distribution. Since good part of the code of gopaw
 is pure header, it will not boost the "main" part of it, but it clearly boosts the
 build of the ourex externals.

  On Windows-10/CYGWIN, we use by default the VisualC++ compiler since, by default, the graphics
 of our apps is done by using the Microsoft WIN32 libraries (in particular the opengl32.lib one).
 It is assumed that "cl.exe" (the VisualC++ compiler) is in your PATH, then before attempting
 to build, be sure that you have installed and "setup" VisualC++ so that this command is available from
 your CYGWIN prompt. See in the bush/Prerequisites section under https://gbarrand.github.io/bush/index.html
 the Windows-10 subsection for instructions.

  At end, you should have a distribution file :
    bin_<config>/distrib/gopaw-<version>-<platform>.zip
    
  To run from the build area :
    UNIX> ./bin_<config>/distrib/gopaw/<version>/bin/gopaw
 To run, for examples the PAW_py_root examples :
    UNIX> cd ../examples/PAW_py_root
    UNIX> ../../mgr/bin_<config>/distrib/gopaw/<version>/bin/gopaw
    GOPAW> exec pawex1
    GOPAW> exec pawex10  # it executes the mandel.py function script.
    GOPAW> exec all
 If built, to run the offscreen version :
    UNIX> ../../mgr/bin_offscreen/distrib/gopaw/<version>/bin/gopaw pawex10.kumac  # it produces a mandel.ps.
 To cleanup the examples area :
    UNIX> cd ../../mgr
    UNIX> ./clean_exas

 On Windows, the application must be run from a DOS prompt (and not from CYGWIN since Getline does
 not work from here) :
    DOS> cd gopaw\mgr
    DOS> cd ..\examples\PAW_py_root
    DOS> ..\..\mgr/bin_visual\distrib\gopaw\<version>\bin\gopaw.exe
    GOPAW> exec pawex1
    GOPAW> exec pawex10  # it executes the mandel.py function script.
    GOPAW> exec all

  See the gopaw section on http://gbarrand.github.io for more.

